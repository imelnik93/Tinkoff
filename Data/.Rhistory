head(df)
table(df$type)
table(df$currency)
cor(df$bad,df$pmt_freq)
cor(df$bad,as.numeric(df$pmt_freq))
trans_freq <- function(x){
if (x==1){52}
}
trans_freq(1)
trans_freq(2)
table(df$pmt_freq)
str(df$pmt_freq)
levels(df$pmt_freq)
a <- subset(df_acc,pmt_freq==0)
a
head(a)
str(a)
table(a$type)
table(df$type)
table(df$pmt_freq)
df_acc <- subset(df_acc_raw,pmt_freq!=7 & !(pmt_freq %in% c('','0')) & relationship==1 & !(type %in%c(4,14,99))
& tcs_customer_id %in% ids,select = which(names(df_acc_raw) %in% keep))
df <- merge(df_cust,df_acc,'tcs_customer_id')[,-1]
df_acc <- subset(df_acc_raw,pmt_freq!=7 & !(pmt_freq %in% c(,0)) & relationship==1 & !(type %in%c(4,14,99))
& tcs_customer_id %in% ids,select = which(names(df_acc_raw) %in% keep))
df <- merge(df_cust,df_acc,'tcs_customer_id')[,-1]
df_acc <- subset(df_acc_raw,pmt_freq!=7 & !(pmt_freq %in% c(as.factor(''),as.factor('0')))
& relationship==1 & !(type %in%c(4,14,99)) & tcs_customer_id %in% ids
,select = which(names(df_acc_raw) %in% keep))
df_acc <- subset(df_acc_raw,pmt_freq!=7
& relationship==1 & !(type %in%c(4,14,99)) & tcs_customer_id %in% ids
,select = which(names(df_acc_raw) %in% keep))
df <- merge(df_cust,df_acc,'tcs_customer_id')[,-1]
df_acc <- subset(df_acc_raw,pmt_freq!=7 & !(pmt_freq %in% as.factor(c('','0')))
& relationship==1 & !(type %in%c(4,14,99)) & tcs_customer_id %in% ids
,select = which(names(df_acc_raw) %in% keep))
df <- merge(df_cust,df_acc,'tcs_customer_id')[,-1]
table(df$pmt_freq)
freq_exclude <- as.factor(c('',0,5,7,'A','B'))
df_acc <- subset(df_acc_raw,pmt_freq!=7 & !(pmt_freq %in% freq_exclude)
& relationship==1 & !(type %in%c(4,14,99)) & tcs_customer_id %in% ids
,select = which(names(df_acc_raw) %in% keep))
df <- merge(df_cust,df_acc,'tcs_customer_id')[,-1]
table(df$pmt_freq)
table(df$currency)
sapply(df$pmt_freq,trans_freq)
a=as.factor(c(1:6))
a
sapply(trans_freq,a)
sapply(a,trans_freq)
trans_freq <- function(x){
if (x==as.factor(1)){52}
else if (x==as.factor(2)){26}
else if (x==as.factor(3)){12}
else if (x==as.factor(4)){4}
else if (x==as.factor(6)){1}
}
sapply(a,trans_freq)
a=as.factor(c(1:4))
sapply(a,trans_freq)
levels(a)
as.numeric(a)
trans_freq <- function(x){
if (x==1){52}
else if (x==2){26}
else if (x==3){12}
else if (x==4){4}
else if (x==6){1}
}
sapply(as.numeric(a),trans_freq)
df$pmt_freq <- sapply(as.numeric(df$pmt_freq),trans_freq)
summary(df$pmt_freq)
head(df$pmt_freq)
as.numeric(df$pmt_freq)
df_acc <- subset(df_acc_raw,pmt_freq!=7 & !(pmt_freq %in% freq_exclude)
& relationship==1 & !(type %in%c(4,14,99)) & tcs_customer_id %in% ids
,select = which(names(df_acc_raw) %in% keep))
df <- merge(df_cust,df_acc,'tcs_customer_id')[,-1]
as.numeric(df$pmt_freq)
trans_freq <- function(x){
if (x==1){52}
else if (x==2){26}
else if (x==3){12}
else if (x==4){4}
else if (x==6){1}
}
df$pmt_freq <- sapply(as.numeric(df$pmt_freq),trans_freq)
summary(df$pmt_freq)
df$pmt_freq
sapply(as.numeric(df$pmt_freq),trans_freq)
df_acc <- subset(df_acc_raw,pmt_freq!=7 & !(pmt_freq %in% freq_exclude)
& relationship==1 & !(type %in%c(4,14,99)) & tcs_customer_id %in% ids
,select = which(names(df_acc_raw) %in% keep))
df <- merge(df_cust,df_acc,'tcs_customer_id')[,-1]
str(df$pmt_freq)
as.numeric(df$pmt_freq)
head(as.numeric(df$pmt_freq))
head((df$pmt_freq))
head(values(df$pmt_freq))
str(df$pmt_freq)
table(df$pmt_freq)
sapply(as.numeric(levels(df$pmt_freq)),trans_freq)
df_acc <- subset(df_acc_raw,pmt_freq!=7 & !(pmt_freq %in% freq_exclude)
& relationship==1 & !(type %in%c(4,14,99)) & tcs_customer_id %in% ids
,select = which(names(df_acc_raw) %in% keep))
df <- merge(df_cust,df_acc,'tcs_customer_id')[,-1]
trans_freq <- function(x){
if (x==1){52}
else if (x==2){26}
else if (x==3){12}
else if (x==4){4}
else if (x==6){1}
}
df$pmt_freq <- factor(df$pmt_freq)
summary(df$pmt_freq)
df$pmt_freq <- sapply(as.numeric(levels(df$pmt_freq)),trans_freq)
df_acc <- subset(df_acc_raw,pmt_freq!=7 & !(pmt_freq %in% freq_exclude)
& relationship==1 & !(type %in%c(4,14,99)) & tcs_customer_id %in% ids
,select = which(names(df_acc_raw) %in% keep))
df <- merge(df_cust,df_acc,'tcs_customer_id')[,-1]
trans_freq <- function(x){
if (x==1){52}
else if (x==2){26}
else if (x==3){12}
else if (x==4){4}
else if (x==6){1}
}
df$pmt_freq <- factor(df$pmt_freq)
df$pmt_freq <- sapply(as.numeric(levels(df$pmt_freq[df$pmt_freq])),trans_freq)
df$pmt_freq <- as.numeric(levels(df$pmt_freq[df$pmt_freq]))
df$pmt_freq <- as.numeric(as.character(df$pmt_freq[df$pmt_freq]))
head(df$pmt_freq)
df_acc <- subset(df_acc_raw,pmt_freq!=7 & !(pmt_freq %in% freq_exclude)
& relationship==1 & !(type %in%c(4,14,99)) & tcs_customer_id %in% ids
,select = which(names(df_acc_raw) %in% keep))
df <- merge(df_cust,df_acc,'tcs_customer_id')[,-1]
trans_freq <- function(x){
if (x==1){52}
else if (x==2){26}
else if (x==3){12}
else if (x==4){4}
else if (x==6){1}
}
a <- as.numeric(as.character(df$pmt_freq[df$pmt_freq]))
head(a)
levels(df$pmt_freq)
labels(df$pmt_freq)
levels(df$pmt_freq)
df$pmt_freq <- factor(df$pmt_freq)
levels(df$pmt_freq)
summary(df$pmt_freq)
attributes(df$pmt_freq)
trans_freq <- function(x){
if (x==3){52}
else if (x==4){26}
else if (x==5){12}
else if (x==6){4}
else if (x==8){1}
}
df$pmt_freq <- sapply(as.numeric(as.character(df$pmt_freq)),trans_freq)
head(df$pmt_freq)
df_acc <- subset(df_acc_raw,pmt_freq!=7 & !(pmt_freq %in% freq_exclude)
& relationship==1 & !(type %in%c(4,14,99)) & tcs_customer_id %in% ids
,select = which(names(df_acc_raw) %in% keep))
df <- merge(df_cust,df_acc,'tcs_customer_id')[,-1]
trans_freq <- function(x){
if (x==3){52}
else if (x==4){26}
else if (x==5){12}
else if (x==6){4}
else if (x==8){1}
}
df$pmt_freq <- as.numeric(sapply(as.numeric(as.character(df$pmt_freq)),trans_freq))
df$pmt_freq <- c(sapply(as.numeric(as.character(df$pmt_freq)),trans_freq))
head(df$pmt_freq
)
df_acc <- subset(df_acc_raw,pmt_freq!=7 & !(pmt_freq %in% freq_exclude)
& relationship==1 & !(type %in%c(4,14,99)) & tcs_customer_id %in% ids
,select = which(names(df_acc_raw) %in% keep))
df <- merge(df_cust,df_acc,'tcs_customer_id')[,-1]
trans_freq <- function(x){
if (x==3){52}
else if (x==4){26}
else if (x==5){12}
else if (x==6){4}
else if (x==8){1}
}
df$pmt_freq <- as.numeric(as.character(df$pmt_freq))
head(df$pmt_freq)
table(df$pmt_freq)
table(df_acc$pmt_freq)
trans_freq <- function(x){
if (x==1){52}
else if (x==2){26}
else if (x==3){12}
else if (x==4){4}
else if (x==6){1}
}
trans_freq(df$pmt_freq)
keep <- c('tcs_customer_id','type','credit_limit','currency','ttl_delq_5',
'ttl_delq_5_29','ttl_delq_30','ttl_delq_30_59','ttl_delq_60_89',
'ttl_delq_90_plus','interest_rate','pmt_freq')
freq_exclude <- as.factor(c('',0,5,7,'A','B'))
df_acc <- subset(df_acc_raw,pmt_freq!=7 & !(pmt_freq %in% freq_exclude)
& relationship==1 & !(type %in%c(4,14,99)) & tcs_customer_id %in% ids
,select = which(names(df_acc_raw) %in% keep))
df <- merge(df_cust,df_acc,'tcs_customer_id')[,-1]
head(df)
freq_exclude <- as.factor(c('',0,5,7,'A','B'))
df_acc <- subset(df_acc_raw,pmt_freq!=7 & !(pmt_freq %in% freq_exclude)
& relationship==1 & !(type %in%c(4,14,99)) & tcs_customer_id %in% ids
,select = which(names(df_acc_raw) %in% keep))
df <- merge(df_cust,df_acc,'tcs_customer_id')[,-1]
head(df)
summary(df$pmt_freq)
df$pmt_freq <- as.numeric(as.character(df$pmt_freq))
head(df)
summary(df$pmt_freq)
trans_freq <- function(x){
if (x==1){x <- 52}
else if (x==2){x <- 26}
else if (x==3){x <- 12}
else if (x==4){x <- 4}
else if (x==6){x <- 1}
}
a <- c(1:4)
a
sapply(a,trans_freq)
freq_exclude <- as.factor(c('',0,5,7,'A','B'))
df_acc <- subset(df_acc_raw,pmt_freq!=7 & !(pmt_freq %in% freq_exclude)
& relationship==1 & !(type %in%c(4,14,99)) & tcs_customer_id %in% ids
,select = which(names(df_acc_raw) %in% keep))
df <- merge(df_cust,df_acc,'tcs_customer_id')[,-1]
trans_freq <- function(x){
if (x==1){x <- 52}
else if (x==2){x <- 26}
else if (x==3){x <- 12}
else if (x==4){x <- 4}
else if (x==6){x <- 1}
}
df$pmt_freq <- sapply(as.numeric(as.character(df$pmt_freq)),trans_freq)
head(df)
str(df)
a <- as.factor(df$type)
head(a)
a
str(df$type)
table(df$type)
df_acc <- subset(df_acc_raw,pmt_freq!=7 & !(pmt_freq %in% freq_exclude)
& relationship==1 & !(type %in%c(12,13,4,14,99)) & tcs_customer_id %in% ids
,select = which(names(df_acc_raw) %in% keep))
df <- merge(df_cust,df_acc,'tcs_customer_id')[,-1]
#variables transformation
trans_freq <- function(x){
if (x==1){x <- 52}
else if (x==2){x <- 26}
else if (x==3){x <- 12}
else if (x==4){x <- 4}
else if (x==6){x <- 1}
}
df$pmt_freq <- sapply(as.integer(as.character(df$pmt_freq)),trans_freq)
table(df$type)
a <- as.factor(df$type,levels=c('auto','mort','card','cons','bus','ca'))
a <- as.factor(df$type,labels=c('auto','mort','card','cons','bus','ca'))
a <- as.factor(df$type)
levels(a)=c('auto','mort','card','cons','bus','ca')
table(a)
str(df$currency)
table(df$currency)
a <- as.factor(df$currency)
table(a)
a <- factor(df$currency)
table(a)
model.matrix(a)
model.matrix(a)
a
model.matrix(df$currency)
model.matrix(~currency,df)
a=model.matrix(~currency-1,df)
head(a)
freq_exclude <- as.factor(c('',0,5,7,'A','B'))
df_acc <- subset(df_acc_raw,pmt_freq!=7 & !(pmt_freq %in% freq_exclude)
& relationship==1 & !(type %in%c(4,12,13,14,99)) & tcs_customer_id %in% ids
,select = which(names(df_acc_raw) %in% keep))
df <- merge(df_cust,df_acc,'tcs_customer_id')[,-1]
#variables transformation
trans_freq <- function(x){
if (x==1){x <- 52}
else if (x==2){x <- 26}
else if (x==3){x <- 12}
else if (x==4){x <- 4}
else if (x==6){x <- 1}
}
df$pmt_freq <- sapply(as.integer(as.character(df$pmt_freq)),trans_freq)
df$type <- as.factor(df$type)
levels(df$type) <- c('auto','mort','card','cons','bus','ca')
df$currency <- factor(df$currency)
a=model.matrix(~currency-1,df)
head(a)
table(a)
summary(a)
a=model.matrix(~type-1,df)
head(a)
summary(a)
head(df)
df <- cbind(df,model.matrix(~type-1,df),model.matrix(~currency-1,df))[,-c(2,4)]
head(df)
write.csv2(df,'df.csv')
head(df)
df <- read.csv2('df.csv')
reg <- glm(formula = bad ~ ., family = binomial(link = "logit"), data = df)
summary(reg)
table(df$typeca)
write.csv2(df,'df.csv',row.names = F)
df <- read.csv2('df.csv')
reg <- glm(formula = bad ~ ., family = binomial(link = "logit"), data = df)
summary(reg)
#create dataframes from the provided .csv files
#write.csv2(read.csv2('https://static.tinkoff.ru/documents/olymp/SAMPLE_ACCOUNTS.csv'),
#          file = "df_acc_raw.csv",row.names = F)
#write.csv2(read.csv2('https://static.tinkoff.ru/documents/olymp/SAMPLE_CUSTOMERS.csv'),
#           file = "df_cust_raw.csv", row.names = F)
df_acc_raw <- read.csv2("df_acc_raw.csv")
df_cust_raw <- read.csv2("df_cust_raw.csv")
#create the final dataset. discussed in section 3 of the report
df_cust <- subset(df_cust_raw, sample_type=='train')[,-3]
ids <- df_cust$tcs_customer_id
keep <- c('tcs_customer_id','type','credit_limit','currency','ttl_delq_5',
'ttl_delq_5_29','ttl_delq_30','ttl_delq_30_59','ttl_delq_60_89',
'ttl_delq_90_plus','interest_rate','pmt_freq')
freq_exclude <- as.factor(c('',0,5,7,'A','B'))
df_acc <- subset(df_acc_raw,pmt_freq!=7 & !(pmt_freq %in% freq_exclude)
& relationship==1 & !(type %in%c(4,12,13,14,99)) & tcs_customer_id %in% ids
,select = which(names(df_acc_raw) %in% keep))
df <- merge(df_cust,df_acc,'tcs_customer_id')[,-1]
#variables transformation
trans_freq <- function(x){
if (x==1){x <- 52}
else if (x==2){x <- 26}
else if (x==3){x <- 12}
else if (x==4){x <- 4}
else if (x==6){x <- 1}
}
df$pmt_freq <- sapply(as.integer(as.character(df$pmt_freq)),trans_freq)
df$type <- as.factor(df$type)
levels(df$type) <- c('auto','mort','card','cons','bus','ca')
df$currency <- factor(df$currency)
#expand factors into dummies
df <- cbind(df,model.matrix(~type-1,df),model.matrix(~currency-1,df))[,-c(2,4)]
write.csv2(df,'df.csv',row.names = F)
df <- read.csv2('df.csv')
df <- read.csv2('df.csv')
reg <- glm(formula = bad ~ ., family = binomial(link = "logit"), data = df)
summary(reg)
table(df$currencyUSD)
cor(df$currencyEUR,df$currencyUSD,df$currencyRUB)
cor(df$currencyEUR,df$currencyUSD)
cor(df$currencyEUR,df$currencyRUB)
cor(df$currencyUSD,df$currencyRUB)
cor(df)
summary(reg)
mean(df$currencyRUB)
reg$coefficients
reg$fitted.values
cor(df)
reg2 <- glm(formula = bad ~ credit_limit+ttl_delq_30+ttl_delq_60_89+interest_rate+pmt_freq+pmt_freq^2+currencyEUR+currencyUSD, family = binomial(link = "logit"), data = df)
summary(reg2)
summary(reg)
reg2 <- glm(formula = bad ~ credit_limit+ttl_delq_30+ttl_delq_60_89+interest_rate+
pmt_freq+pmt_freq*pmt_freq+currencyEUR+currencyUSD,
family = binomial(link = "logit"), data = df)
summary(reg2)
df$pmt_freq_sq <- df$pmt_freq^2
reg2 <- glm(formula = bad ~ credit_limit+ttl_delq_30+ttl_delq_60_89+interest_rate+
pmt_freq+pmt_freq_sq+currencyEUR+currencyUSD, family = binomial(link = "logit"), data = df)
summary(reg2)
reg2 <- glm(formula = bad ~ credit_limit+ttl_delq_30+ttl_delq_60_89+interest_rate+typecard+
+typemort+typeauto+pmt_freq+pmt_freq_sq+currencyEUR+currencyUSD,
family = binomial(link = "logit"), data = df)
summary(reg2)
reg2 <- glm(formula = bad ~ credit_limit+ttl_delq_30+ttl_delq_60_89+interest_rate+typecard+
+typemort+typeauto+typeca+typecons+typebus+pmt_freq+pmt_freq_sq+
currencyEUR+currencyUSD, family = binomial(link = "logit"), data = df)
summary(reg2)
reg2 <- glm(formula = bad ~ credit_limit+ttl_delq_30+ttl_delq_60_89+interest_rate+typecard+
+typemort+typeca+typecons+typebus+pmt_freq+pmt_freq_sq+
currencyEUR+currencyUSD, family = binomial(link = "logit"), data = df)
summary(reg2)
reg2 <- glm(formula = bad ~ credit_limit+ttl_delq_30+ttl_delq_60_89+interest_rate+typecard+
+typemort+typecons+typebus+pmt_freq+pmt_freq_sq+
currencyEUR+currencyUSD, family = binomial(link = "logit"), data = df)
summary(reg2)
reg2 <- glm(formula = bad ~ credit_limit+ttl_delq_30+ttl_delq_60_89+interest_rate+typecard+
+typemort+typecons+pmt_freq+pmt_freq_sq+
currencyEUR+currencyUSD, family = binomial(link = "logit"), data = df)
summary(reg2)
reg2 <- glm(formula = bad ~ credit_limit+ttl_delq_30+ttl_delq_60_89+interest_rate+typecard+
+typemort+pmt_freq+pmt_freq_sq+
currencyEUR+currencyUSD, family = binomial(link = "logit"), data = df)
summary(reg2)
reg2 <- glm(formula = bad ~ credit_limit+ttl_delq_30+ttl_delq_60_89+interest_rate+typecard+
+typemort+pmt_freq+pmt_freq_sq+currencyEUR+currencyUSD,
family = binomial(link = "logit"), data = df)
summary(reg2)
summary(reg2)
summary(reg)
reg3 <- glm(formula = bad ~ credit_limit+ttl_delq_30+ttl_delq_60_89+interest_rate+typecard+typemort+pmt_freq+pmt_freq_sq+currencyUSD,
family = binomial(link = "logit"), data = df)
summary(reg3)
summary(reg2)
summary(df$pmt_freq)
table(df$pmt_freq)
cor(df)
fitted(reg3)
a <- fitted(reg3)
mean(a)
df_acc_raw <- read.csv2("df_acc_raw.csv")
df_cust_raw <- read.csv2("df_cust_raw.csv")
#create the final dataset. discussed in section 3 of the report
#delete the training part of the data
df_cust <- subset(df_cust_raw, sample_type=='train')[,-3]
#create a vector of remaining ids
ids <- df_cust$tcs_customer_id
#create a vector of variables that we want to keep (see section 4)
keep <- c('tcs_customer_id','type','credit_limit','currency','ttl_delq_5',
'ttl_delq_5_29','ttl_delq_30','ttl_delq_30_59','ttl_delq_60_89',
'ttl_delq_90_plus','interest_rate','pmt_freq')
#create vector of factors that we will delete from pmt_freq
freq_exclude <- as.factor(c('',0,5,7,'A','B'))
#subsetting our dataframe. we filter pmt_freq
df_acc <- subset(df_acc_raw,!(pmt_freq %in% freq_exclude)
& relationship==1 & !(type %in%c(4,12,13,14,99)) & tcs_customer_id %in% ids
,select = which(names(df_acc_raw) %in% keep))
df <- merge(df_cust,df_acc,'tcs_customer_id')[,-1]
#variables transformation
trans_freq <- function(x){
if (x==1){x <- 52}
else if (x==2){x <- 26}
else if (x==3){x <- 12}
else if (x==4){x <- 4}
else if (x==6){x <- 1}
}
df$pmt_freq <- sapply(as.integer(as.character(df$pmt_freq)),trans_freq)
df$type <- as.factor(df$type)
levels(df$type) <- c('auto','mort','card','cons','bus','ca')
df$currency <- factor(df$currency)
#expand factors into dummies
df <- cbind(df,model.matrix(~type-1,df),model.matrix(~currency-1,df))[,-c(2,4)]
write.csv2(df,'df.csv',row.names = F)
head(df)
table(df$pmt_freq)
#create dfs from downloaded files
df_acc_raw <- read.csv2("df_acc_raw.csv")
df_cust_raw <- read.csv2("df_cust_raw.csv")
#create the final dataset. discussed in section 3 of the report
#delete the training part of the data
df_cust <- subset(df_cust_raw, sample_type=='train')[,-3]
#create a vector of remaining ids
ids <- df_cust$tcs_customer_id
#create a vector of variables that we want to keep (see section 4)
keep <- c('tcs_customer_id','type','credit_limit','currency','ttl_delq_5',
'ttl_delq_5_29','ttl_delq_30','ttl_delq_30_59','ttl_delq_60_89',
'ttl_delq_90_plus','interest_rate','pmt_freq')
#create vector of factors that we will delete from pmt_freq
freq_exclude <- as.factor(c('',0,5,7,'A','B'))
#subsetting our dataframe. we filter pmt_freq, leave only people, exclude unusual types
#also we need only IDs from ids vector and select only variables from the list we determined
df_acc <- subset(df_acc_raw,!(pmt_freq %in% freq_exclude)
& relationship==1 & !(type %in%c(4,12,13,14,99)) & tcs_customer_id %in% ids
,select = which(names(df_acc_raw) %in% keep))
#merge 2 dataframes by IDs, delete tcs_customer_id since we don't need it anymore
df <- merge(df_cust,df_acc,'tcs_customer_id')[,-1]
#variables transformation
#create a function that will transfrom codes of frequency into the number of payments per year
trans_freq <- function(x){
if (x==1){x <- 52}
else if (x==2){x <- 26}
else if (x==3){x <- 12}
else if (x==4){x <- 4}
else if (x==6){x <- 1}
}
#apply our function to pmt_freq
df$pmt_freq <- sapply(as.integer(as.character(df$pmt_freq)),trans_freq)
#get rid of type levels that we deleted
df$type <- as.factor(df$type)
#create new labels that we can understand
levels(df$type) <- c('auto','mort','card','cons','bus','ca')
#get rid of type levels that we deleted
df$currency <- factor(df$currency)
#expand factors into dummies
df <- cbind(df,model.matrix(~type-1,df),model.matrix(~currency-1,df))[,-c(2,4)]
#write a clean datafile
write.csv2(df,'df.csv',row.names = F)
str(df)
table(df$bad)
summary(df$credit_limit)
#start after data_filtering.R
#loading the data.frame we saved in the previous script
df <- read.csv2('df.csv')
#fit a logit with all variables+summary
reg <- glm(formula = bad ~ ., family = binomial(link = "logit"), data = df)
summary(reg)
#fit a logit with chosen variables (see section 5)
df$pmt_freq_sq <- df$pmt_freq^2 #create a squared frequency variable
reg2 <- glm(formula = bad ~ credit_limit+ttl_delq_30+ttl_delq_60_89+interest_rate+typecard+
+typemort+pmt_freq+pmt_freq_sq+currencyEUR+currencyUSD,
family = binomial(link = "logit"), data = df)
summary(reg2)
#fit the last logit
reg3 <- glm(formula = bad ~ credit_limit+ttl_delq_30+ttl_delq_60_89+interest_rate+typecard+typemort+pmt_freq+pmt_freq_sq+currencyUSD,
family = binomial(link = "logit"), data = df)
summary(reg3)
